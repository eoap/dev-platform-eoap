apiVersion: skaffold/v4beta9
kind: Config
metadata:
  name: eoap-event-driven
build:
  artifacts:
  - image: stageout
    context: stage-out
    docker:
      dockerfile: Dockerfile
  - image: validateschema
    context: validate-schema
    docker:
      dockerfile: Dockerfile

deploy:
  helm:
    releases:
      # argo workflows
      - name: eoap-argo-workflows
        remoteChart: argo/argo-workflows
        namespace: eoap-event-driven
        createNamespace: true
        wait: true
        setValues:
          crds.install: false
          server.authModes: [server]
          singleNamespace: true
          workflow:
            serviceAccount:
              create: true
              name: "argo"
            rbac:
              create: true
          controller:
            workflowNamespaces:
              - eoap-event-driven
            workflowDefaults:
              spec:
                serviceAccountName: argo
            rbac.writeConfigMaps: true
            securityContext.runAsNonRoot: false
          artifactRepository.s3:
            bucket: workflows
            endpoint: eoap-event-driven-localstack:4566
            insecure: true
            accessKeySecret:
              name: localstack-cred
              key: accesskey
            secretKeySecret:
              name: localstack-cred
              key: secretkey
      # argo events
      - name: eoap-argo-events
        remoteChart: argo/argo-events
        namespace: eoap-event-driven
        wait: true
        createNamespace: true
        setValues:
          crds.install: false
          controller:
            rbac:
              enabled: true
              namespaced: true
              managedNamespace: eoap-event-driven


      - name: eoap-redis
        chartPath: ./charts/redis
        namespace: eoap-event-driven
        createNamespace: true
        setValues:
          maxMemory: 2mb
          maxMemoryPolicy: allkeys-lru
          port: 6379
        
      # local chart for event bus/source/sensor - NEEDS TESTING
      - name: eoap-event-driven
        chartPath: ./charts/event-driven
        namespace: eoap-event-driven
        createNamespace: true
        wait: true
        setValues:
          jetstreamReplicas: 3
          jetstreamVolumeSize: 1Gi
          streamName: STREAM

      # argo cwl runner
      - name: argo-cwl-runner
        chartPath: argo-cwl-runner
        namespace: eoap-event-driven
        valuesFiles:
          - argo-cwl-runner/values.yaml
        setValueTemplates:
          stageOutImage: "{{.IMAGE_NAME_stageout}}:{{.IMAGE_TAG_stageout}}"
        setFiles: {
          userSettings: ./argo-cwl-runner/files/user-settings.json
        }
      # argo water bodies
      - name: argo-water-bodies
        chartPath: argo-water-bodies
        namespace: eoap-event-driven
        valuesFiles:
          - argo-water-bodies/values.yaml
        setFiles: {
          appPackage: ./argo-water-bodies/files/app-package.json,
          inputSchema: ./argo-water-bodies/files/input-parameters-schema.json
        }
        setValues: 
          storageClassRWX: "standard"

      - name: eoap-event-driven-localstack
        remoteChart: localstack/localstack
        namespace: eoap-event-driven
        createNamespace: true
        wait: true
        setValues:
          service.type: ClusterIP

      - name: eoap-event-driven-coder
        chartPath: ../charts/coder
        namespace: eoap-event-driven
        createNamespace: true
        wait: true
        setValues:
          coder.coderImage: eoepca/pde-code-server:1.0.0
          coder.workspace: eoap-event-driven-with-argo
          coderstorageClassName: standard
          coder.workspaceStorage: 10Gi
          coderResources.limits.cpu: '2'
          coderResources.limits.memory: '6442450944'
          coderResources.requests.cpu: '1'
          coderResources.requests.memory: '4294967296'
          calrissian.enabled: true 
        setFiles: {
          initScript: ./files/init.sh,
          bashrcScript: ./files/bash-rc,
          bashloginScript: ./files/bash-login
        }
      

portForward: 
  - resourceType: service
    resourceName: eoap-argo-workflows-server
    namespace: eoap-event-driven
    address: localhost
    port: 2746
    localPort: 2746  
  - resourceType: service
    resourceName: code-server-service
    namespace: eoap-event-driven
    address: localhost
    port: 8080
    localPort: 8000  